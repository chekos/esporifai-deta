{% extends "base.html.jinja" %}{% block title %}{{ title }}{% endblock %}
{% block content %}
<main>
    <div id="track-container" class="track-container">
        <div id="track" class="track__inner">
            <img src="{{ track.album.images[1].url }}" alt="{{ track.name }}" />
            {% set mins = track.duration_ms // 60000 %}{% set secs = track.duration_ms % 60000 // 1000 %}
            <div class="track__info__group">
                <h2 class="track__name">{{ track.name }}</h2>
                <small class="track__duration">{{ '%02d' % mins }}:{{ '%02d' % secs }}</small>
            </div>
            <div class="track__artists">
                {% for artist in track.artists %}
                <div class="track__artist__name">{{ artist.name }}</div>
                {% endfor %}
            </div>
            <div class="track__album__name">{{ track.album.name }}</div>
            <div id="popularityPlot"></div>

            <div class="popularity-container">
            </div>
        </div>
    </div>
    <button onclick="captureAndDownload()"><a class="login-button">Download image</a></button>
</main>
<script type="module">
    function generateObjectsWithColor(share) {
        if (share < 1 || share > 100) {
            throw new Error("Share parameter must be between 1 and 100");
        }

        const result = [];

        for (let index = 1; index <= 100; index++) {
            const color = index <= share;
            result.push({ index, color });
        }

        return result;
    }

    function popularityPlot(popularity) {
        const div = document.querySelector("#popularityPlot");

        const plot = Plot.plot({
            width: div.clientWidth,
            height: 15,
            x: { domain: [0, 100], label: "", axis: null },
            marks: [
                Plot.tickX(generateObjectsWithColor(popularity), {
                    x: "index",
                    stroke: "color",
                    strokeWidth: div.clientWidth / 110,
                }),
            ],
        });

        div.append(plot);
    }

    popularityPlot({{ track.popularity }})

</script>
{% endblock %}